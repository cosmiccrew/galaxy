# NOTE: For maximum performance, build using a nightly compiler
# If you are using rust stable, remove the "-Zshare-generics=y" below.

#for wasm targets, allowing the use of `cargo run --target wasm32-unknown-unknown` to run a wasm webserver
# requires that `cargo install wasm-server-runner` is installed.
[target.wasm32-unknown-unknown]
runner = "wasm-server-runner"
#enables WebGPU support
rustflags = ["--cfg=web_sys_unstable_apis"]

# you may want to add these to reduce repeating commands
[alias]
rd = "run --features debug"
bd = "build --features debug"
rf = "run --features fast_compile"
bf = "build --features fast_compile"
w = "run --target wasm32-unknown-unknown --profile wasm --no-default-features"
bw = "build --target wasm32-unknown-unknown --profile wasm --no-default-features"

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = [
  "-C",
  "link-arg=-fuse-ld=lld",
  # "-Zshare-generics=y"
]

# NOTE: you must install [Mach-O LLD Port](https://lld.llvm.org/MachO/index.html) on mac. you can easily do this by installing llvm which includes lld with the "brew" package manager:
# `brew install llvm`
[target.x86_64-apple-darwin]
rustflags = [
  "-C",
  "link-arg=-fuse-ld=/usr/local/opt/llvm/bin/ld64.lld",
  # "-Zshare-generics=y",
]

[target.aarch64-apple-darwin]
rustflags = [
  "-C",
  "link-arg=-fuse-ld=/opt/homebrew/opt/llvm/bin/ld64.lld",
  # "-Zshare-generics=y",
]

[target.x86_64-pc-windows-msvc]
linker = "rust-lld.exe"
rustflags = [
  # "-Zshare-generics=n"
]
