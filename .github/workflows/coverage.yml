# name: coverage

# on: [push]
# jobs:
#   coverage:
#     name: coverage
#     runs-on: ubuntu-latest
#     container:
#       image: xd009642/tarpaulin:latest-slim
#       options: --security-opt seccomp=unconfined

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Setup dependencies
#         run: apt-get update && apt-get install -y pkg-config libasound2-dev libudev-dev cmake g++ libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev
#       - name: Generate code coverage
#         run: |
#           cargo tarpaulin -v --workspace --timeout 120 --out Xml --no-fail-fast
#         # --tests

#       - name: Upload to codecov.io
#         uses: codecov/codecov-action@v2
#         with:
#           token: ${{secrets.CODECOV_TOKEN}}
#           fail_ci_if_error: true


name: coverage

on:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_INCREMENTAL: 0
  LLVM_PROFILE_FILE: grcov-%p-%m.profraw
  RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests -Cinstrument-coverage"

jobs:
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout sources 
        uses: actions/checkout@v3
      - name: Setup dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libasound2-dev libudev-dev cmake g++ libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev
      - name: Install Rust toolchain 
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Configure cache
        uses: actions/cache@v3
        with:
          key: coverage-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose --no-fail-fast
        
      - name: Install grcov
        uses: SierraSoftworks/setup-grcov@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
      - name: Run grcov
        run:  grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o lcov.info

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          # token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
