name: continuous integration

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  fmt:
    runs-on: ubuntu-latest
    name: Check rust formatting
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    name: Test (${{ matrix.config.name }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - { target: "x86_64-unknown-linux-gnu", name: "linux" }

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        if: matrix.config.target == 'x86_64-unknown-linux-gnu'
        run: sudo apt-get update; sudo apt-get install libasound2-dev libudev-dev --no-install-recommends

      - name: Cache rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci-test-${{ matrix.config.name }}
          prefix-key: v0 #increment this to bust the cache if needed
          save-if: ${{ github.event_name == 'push' }}

      - name: Run cargo test [Linux]
        if: matrix.config.target == 'x86_64-unknown-linux-gnu'
        run: cargo test --target ${{ matrix.config.target }}

  clippy:
    runs-on: ubuntu-latest
    name: Clippy correctness checks (${{ matrix.config.name }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - { target: "x86_64-unknown-linux-gnu", name: "linux" }
          - { target: "wasm32-unknown-unknown", name: "wasm" }

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        if: matrix.config.target == 'x86_64-unknown-linux-gnu'
        run: sudo apt-get update; sudo apt-get install libasound2-dev libudev-dev --no-install-recommends

      - name: Cache rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci-clippy-${{ matrix.config.name }}
          prefix-key: v0 #increment this to bust the cache if needed
          save-if: ${{ github.event_name == 'push' }}


      - name: Install WASM target
        if: matrix.config.target == 'wasm32-unknown-unknown'
        run: rustup target add wasm32-unknown-unknown

      - name: Install clippy
        run: rustup component add clippy


      - name: Run cargo clippy [Linux]
        if: matrix.config.target == 'x86_64-unknown-linux-gnu'
        run: cargo clippy --target ${{ matrix.config.target }} -- -W clippy::correctness -D warnings

      - name: Run cargo clippy [WASM]
        if: matrix.config.target == 'wasm32-unknown-unknown'
        run: cargo clippy --profile wasm --no-default-features --target ${{ matrix.config.target }} -- -W clippy::correctness -D warnings

  cargo-deny:
    name: License and advisories check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    #prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
