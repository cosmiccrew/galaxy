[package]
name = "galaxy"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/cosmiccrew/galaxy"
description = "Cosmic Crew: Galaxy is a 2d, class based gravity oriented fighting game."

[workspace]
resolver = "2"
members = ["tools/*"]

[package.metadata.bundle]
# name = "Cosmic Crew: Galaxy"
identifier = "dev.sycro.comsiccrew.galaxy"
# icon = ["build/icons"]
resources = ["assets"]

#See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
#the bevy game engine itself
bevy = { version = "0.11.2", default-features = false, features = [ "android_shared_stdcxx", "animation", "bevy_animation", "bevy_asset", "bevy_audio", "bevy_core_pipeline", "bevy_gilrs", "bevy_gizmos", "bevy_gltf", "bevy_pbr", "bevy_render", "bevy_scene", "bevy_sprite", "bevy_text", "bevy_ui", "bevy_winit", "default_font", "filesystem_watcher", "hdr", "ktx2", "png", "serialize", "tonemapping_luts", "vorbis", "zstd", "multi-threaded"] } #the removal of default-features is needed to enable webgpu wasm backend.
#full on basic editor/debug engine for bevy.
bevy_editor_pls = { git = "https://github.com/jakobhellermann/bevy_editor_pls.git", optional = true }
#resource and asset inspection in bevy
bevy-inspector-egui = "0.19.0"
#2d physics engine in bevy
bevy_xpbd_2d = { git = "https://github.com/Jondolf/bevy_xpbd", features = ["enhanced-determinism"] }
#bevu "rollback" ggrs networking library
bevy_ggrs = { version = "0.13.0", features = ["wasm-bindgen"] }
bevy_matchbox = { version = "0.7.0", features = ["ggrs"] }

#helps with loading assets in a logical, dynamic format.
bevy_asset_loader = { version = "0.17.0", features = ["2d", "standard_dynamic_assets"] }
#handling inputs in a logical, extensible way with options for command combinations or aliases.
leafwing-input-manager = "0.10.0"

#(ser)ialising/(de)serialising library
serde = "1"
#dynamic error handler and logger
anyhow = "1"
#pseudo random number generation
rand = "0.8.5"
#cli parsing for startup asset config's
clap = { version = "4.4.0", features = ["derive"] }


# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# # bevy = { version = "0.11.1", features = ["multi-threaded"]}
# bevy_rapier2d = { version = "0.22.0", features = ["parallel"]}

# [target.'cfg(target_arch = "wasm32")'.dependencies]
# bevy_rapier2d = { version = "0.22.0", features = ["wasm-bindgen"]}


[features]
default = ["debug"]

fast_compile = ["bevy/dynamic_linking"]
ci_testing = ["bevy/bevy_ci_testing"]

debug = ["bevy_editor_pls", "bevy_xpbd_2d/debug-plugin"]

# long_description

[profile.dev]
opt-level = 1
#Large compile-time improvements on macos
# debug = 1

#Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
#High optimisations, but long compile times
opt-level = 3
# #Medium optimisations, but shorter compile times
# opt-level = 2

[profile.wasm]
# Use release profile as default values
inherits = "dev"

# Optimize with size in mind, also try "s", sometimes it is better.
# This doesn't increase compilation times compared to -O3, great improvements
opt-level = "z"

# # Do a second optimization pass removing duplicate or unused code from dependencies.
# # Slows compile times, marginal improvements
# lto = "fat"

# # When building crates, optimize larger chunks at a time
# # Slows compile times, marginal improvements
# codegen-units = 1



[profile.wasm-release]
# Use release profile as default values
inherits = "release"

# Optimize with size in mind, also try "s", sometimes it is better.
# This doesn't increase compilation times compared to -O3, great improvements
opt-level = "z"

# Do a second optimization pass removing duplicate or unused code from dependencies.
# Slows compile times, marginal improvements
lto = "fat"

# # When building crates, optimize larger chunks at a time
# # Slows compile times, marginal improvements
# codegen-units = 1
